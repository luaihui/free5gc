# This is a basic workflow to help you get started with Actions

name: Free5gc CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
#  pull_request:
#    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: git clone free5gc
        run: |
          echo "$ uname -r"
          uname -r
          echo "# Step0: Remove Old GO Language Packages"
          echo "# sudo rm -rf /usr/local/go"
          sudo rm -rf /usr/local/go
          echo "# wget https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz"
          wget https://dl.google.com/go/go1.14.4.linux-amd64.tar.gz
          echo "# sudo tar -C /usr/local -zxvf go1.14.4.linux-amd64.tar.gz"
          sudo tar -C /usr/local -zxvf go1.14.4.linux-amd64.tar.gz
          
          echo "# mkdir -p ~/go/{bin,pkg,src}"
          mkdir -p ~/go/{bin,pkg,src}
          echo 'export GOPATH=$HOME/go' >> ~/.bashrc
          echo 'export GOROOT=/usr/local/go' >> ~/.bashrc
          echo 'export PATH=$PATH:$GOPATH/bin:$GOROOT/bin' >> ~/.bashrc
          source ~/.bashrc

          echo "####### Try to install mongodb #######"
          echo "$ sudo -E apt-get -y update"
          sudo -E apt-get -y update
          echo "$ sudo -E apt-get install libcurl4 openss"
          sudo -E apt-get install libcurl4 openssl
          echo "$ sudo systemctl status mongodb"
          sudo systemctl status mongodb

          echo "Step1: Check Out"
          echo "$"
          echo "$ cd /tmp"
          cd /tmp
          echo "$ git clone -b master https://github.com/free5gc/free5gc.git"
          git clone -b master https://github.com/free5gc/free5gc.git
          echo "$ cd /tmp/free5gc"
          cd /tmp/free5gc
          echo "$ git submodule update --init --recursive"
          git submodule update --init --recursive
          echo "$ cd /tmp"
          cd /tmp
          echo "$ git clone -b v0.1.0 https://github.com/PrinzOwO/gtp5g.git"
          git clone -b v0.1.0 https://github.com/PrinzOwO/gtp5g.git 
          
          echo "$"
          echo "Step2: SourceCode Static Check"
          echo "$"
          echo "$ cd /tmp/free5gc"
          cd /tmp/free5gc
          echo "$ go vet ./src/amf/..."
          go vet ./src/amf/...
          echo "$ go vet ./src/ausf/..." 
          go vet ./src/ausf/...
          echo "$ go vet ./src/nrf/..." 
          go vet ./src/nrf/...
          echo "$ go vet ./src/nssf/..."  
          go vet ./src/nssf/...
          echo "$ go vet ./src/pcf/..."  
          go vet ./src/pcf/... 
          echo "$ go vet ./src/smf/..." 
          go vet ./src/smf/...
          echo "$ go vet ./src/udm/..."  
          go vet ./src/udm/...
          echo "$ go vet ./src/udr/..." 
          go vet ./src/udr/...
          echo "$ go vet ./src/n3iwf/..." 
          go vet ./src/n3iwf/...
          echo "$ go vet ./src/upf/..." 
          go vet ./src/upf/... 
          
          echo "$"
          echo "Step3: Build"
          echo "$"
          echo "Step3.1: Install some packages"
          echo "$"
          echo "$ sudo -E apt-get install -y wget git"
          sudo -E apt-get install -y wget git
          echo "$ sudo -E apt-get install -y gcc cmake autoconf libtool pkg-config libmnl-dev libyaml-dev"
          sudo -E apt-get install -y gcc cmake autoconf libtool pkg-config libmnl-dev libyaml-dev
          echo "$" 
          echo "Step3.2: Build gtp5g"
          echo "$"
          echo "$ cd /tmp/gtp5g" 
          cd /tmp/gtp5g
          echo "$ make" 
          make
          echo "$ sudo -E make install" 
          sudo -E make install 
          
          echo "$" 
          echo "$ Step3.3: Build free5gc components"
          echo "$"
          echo "$ cd /tmp/free5gc" 
          cd /tmp/free5gc
          echo "$ go build -o bin/amf -x src/amf/amf.go" 
          go build -o bin/amf -x src/amf/amf.go
          echo "$ go build -o bin/ausf -x src/ausf/ausf.go" 
          go build -o bin/ausf -x src/ausf/ausf.go
          echo "$ go build -o bin/nrf -x src/nrf/nrf.go" 
          go build -o bin/nrf -x src/nrf/nrf.go
          echo "$ go build -o bin/nssf -x src/nssf/nssf.go" 
          go build -o bin/nssf -x src/nssf/nssf.go
          echo "$ go build -o bin/pcf -x src/pcf/pcf.go" 
          go build -o bin/pcf -x src/pcf/pcf.go
          echo "$ go build -o bin/smf -x src/smf/smf.go" 
          go build -o bin/smf -x src/smf/smf.go
          echo "$ go build -o bin/udm -x src/udm/udm.go" 
          go build -o bin/udm -x src/udm/udm.go
          echo "$ go build -o bin/udr -x src/udr/udr.go" 
          go build -o bin/udr -x src/udr/udr.go 
          echo "$ go build -o bin/n3iwf -x src/n3iwf/n3iwf.go" 
          go build -o bin/n3iwf -x src/n3iwf/n3iwf.go
          
          echo "$"
          echo "Step3.3: Build free5gc upf"
          echo "$"
          echo "$ cd /tmp/free5gc/src/upf"
          cd /tmp/free5gc/src/upf
          echo "$ rm -rf build"
          rm -rf build
          echo "$ mkdir -p build" 
          mkdir -p build 
          echo "$ cd ./build" 
          cd ./build
          echo "$ cmake .."  
          cmake .. 
          echo "$ make"  
          make 
          
          echo "$"
          echo "Step4: Test"
          echo "$"
          echo "$ cd /tmp/free5gc"
          cd /tmp/free5gc
          echo "$ chmod +x ./test.sh"
          chmod +x ./test.sh
          echo "$ sudo -E ./test.sh TestRegistration"
          sudo -E ./test.sh TestRegistration
          echo "$ sudo -E ./test.sh TestGUTIRegistration"
          sudo -E ./test.sh TestGUTIRegistration
          echo "$ sudo -E ./test.sh TestServiceRequest" 
          sudo -E ./test.sh TestServiceRequest 
          echo "$ sudo -E ./test.sh TestXnHandover" 
          sudo -E ./test.sh TestXnHandover
          echo "$ sudo -E ./test.sh TestDeregistration" 
          sudo -E ./test.sh TestDeregistration
          echo "$ sudo -E./test.sh TestPDUSessionReleaseRequest" 
          sudo -E./test.sh TestPDUSessionReleaseRequest
          echo "$ sudo -E ./test.sh TestPaging" 
          sudo -E ./test.sh TestPaging
          echo "$ sudo -E ./test.sh TestReSynchronisation" 
          sudo -E ./test.sh TestReSynchronisation
          
          echo "$ rm -rf testkeylog/" 
          rm -rf testkeylog/
          
          echo "$" 
          echo "Completed!!!" 
          
        
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#      - name: Check out free5gc 
#        uses: actions/checkout@v2

      # Runs a single command using the runners shell
#      - name: Run a one-line script
#        run: echo Hello, world!

      # Runs a set of commands using the runners shell
#      - name: Run a multi-line script
#        run: |
#          echo Add other actions to build,
#          echo test, and deploy your project.
